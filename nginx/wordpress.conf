# Good ref: http://danielmiessler.com/blog/ultimate-speed-wordpress-nginx/

# We don't need these HTTP methods.
if ($request_method ~* "^(TRACE|DELETE|TRACK)"){ return 403; }

# Just in case
if ($request_method !~ ^(GET|POST|HEAD|OPTIONS)$ ) { return 444; }

# Block foreign characters in URLs
if ($args ~* "(%0|%A|%B|%C|%D|%E|%F)") { return 403; }

# No access to files with versioning information.
location ~ /(.|wp-config.php|readme.html|licence.txt) {
    return 404;
}

# No dot files like htaccess or env.
location ~ /. { deny all; }

# Rules to block suspicious URIs
set $susquery 0;

if ($args ~* "\.\./") { set $susquery 1; }
if ($args ~* "\.(bash|git|hg|log|svn|swp|cvs)") { set $susquery 1; }
if ($args ~* "etc/passwd") { set $susquery 1; }
if ($args ~* "boot.ini") { set $susquery 1; }
if ($args ~* "ftp:") { set $susquery 1; }
if ($args ~* "http:") { set $susquery 1; }
if ($args ~* "https:") { set $susquery 1; }
if ($args ~* "(<|%3C).*script.*(>|%3E)") { set $susquery 1; }
if ($args ~* "mosConfig_[a-zA-Z_]{1,21}(=|%3D)") { set $susquery 1; }
if ($args ~* "base64_encode") { set $susquery 1; }
if ($args ~* "(%24&x)") { set $susquery 1; }
if ($args ~* "(&#x22;|&#x27;|&#x3C;|&#x3E;|&#x5C;|&#x7B;|&#x7C;|%24&x)"){ set $susquery 1; }
if ($args ~* "(127.0)") { set $susquery 1; }
if ($args ~* "(globals|encode|localhost|loopback)") { set $susquery 1; }
if ($args ~* "(request|insert|concat|union|declare)") { set $susquery 1; }
if ($args !~ "^loggedout=true"){ set $susquery 0; }
if ($args !~ "^action=jetpack-sso"){ set $susquery 0; }
if ($args !~ "^action=rp"){ set $susquery 0; }
if ($http_cookie !~ "^.*wordpress_logged_in_.*$"){ set $susquery 0; }
if ($http_referer !~ "^http://maps.googleapis.com(.*)$"){ set $susquery 0; }

if ($susquery = 1) { return 403; } 


# Block comment spam

location /wp-comments-post.php {

    valid_referers jetpack.wordpress.com/jetpack-comment/ ;
    set $rule_0 0;

    if ($request_method ~ "POST"){ set $rule_0 1$rule_0; }
    if ($invalid_referer) { set $rule_0 2$rule_0; }
    if ($http_user_agent ~ "^$"){ set $rule_0 3$rule_0; }
    if ($rule_0 = "3210") { return 403; }
}

# After we define a location block, the passthru to FPM is lost. We need to specify it again here as 
# Nginx won't specifically know what to do with the php file.
#
# WARNING: if Nginx doesn't send .php files to a FastCGI process, it will try to send them as the DEFAULT MIMETYPE.
# That means the php source code will be sent back as a PLAIN TEXT FILE or FILE DOWNLOAD.


# Password-protect the login file to prevent brute-forcing after user enumeration profiling.
location ~^/wp/(wp-login\.php){
        auth_basic "Nope";
        auth_basic_user_file /var/www/.htpasswd;

        fastcgi_read_timeout         900s; # 15 minutes
        fastcgi_pass                 unix:/var/run/hhvm/hhvm.sock;
        fastcgi_param                SCRIPT_FILENAME  $document_root$fastcgi_script_name;
        include                      fastcgi_params;
        fastcgi_buffer_size          128k;
        fastcgi_buffers 4            256k;
        fastcgi_busy_buffers_size    256k;
}


# Set out how to deal with wp-admin requests.
location /wp/wp-admin {

    # Don't do anything with the admin ajax script, just send it to FPM. No auth needed.
    location ~^/(wp-admin/admin-ajax\.php) {

            fastcgi_read_timeout         900s; # 15 minutes
            fastcgi_pass                 unix:/var/run/hhvm/hhvm.sock;
            fastcgi_index                index.php;
            fastcgi_param                SCRIPT_FILENAME  $document_root$fastcgi_script_name;
            include                      fastcgi_params;
            fastcgi_buffer_size          128k;
            fastcgi_buffers 4            256k;
            fastcgi_busy_buffers_size    256k;
    }

    # For any PHP file under wp-admin, require auth, then send it to FPM.
   location ~/wp/wp-admin/.*\.php$ {
            auth_basic "Nope";
            auth_basic_user_file /var/www/.htpasswd;

            fastcgi_read_timeout         900s; # 15 minutes
            fastcgi_pass                 unix:/var/run/hhvm/hhvm.sock;
            fastcgi_index                index.php;
            fastcgi_param                SCRIPT_FILENAME  $document_root$fastcgi_script_name;
            include                      fastcgi_params;
            fastcgi_buffer_size          128k;
            fastcgi_buffers 4            256k;
            fastcgi_busy_buffers_size    256k;
    }
}